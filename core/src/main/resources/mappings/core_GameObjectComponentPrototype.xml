<?xml version="1.0" encoding="UTF-8" ?>
<entity-mappings version="3.1" xmlns="https://jakarta.ee/xml/ns/persistence/orm" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="https://jakarta.ee/xml/ns/persistence/orm https://jakarta.ee/xml/ns/persistence/orm/orm_3_1.xsd">

    <named-native-query name="GameObjectComponentPrototypeRepository.findPrototypesByPrototypeName" result-set-mapping="GameObjectComponentPrototypeRepository.findPrototypesByPrototypeName">
        <query>
            with recursive prototypes as (
                with recursive game_object_sets as (
                    select id, parent_id, 1 as "order"
                        from game_object_prototypes
                        where "name" = :prototypeName
                    union
                    select game_objects.id, game_objects.parent_id, game_object_sets."order" + 1 as "order"
                        from game_object_prototypes game_objects
                        join game_object_sets on game_object_sets.parent_id = game_objects.id
                )
                select prototype.*, game_object."order"
                    from game_object_sets game_object
                    join game_object_component_prototypes prototype on game_object.id = prototype.prototype_id
                union
                select prototype.*, prototypes."order" + 1 as "order"
                    from game_object_component_prototypes prototype
                    join prototypes on prototypes.parent_id = prototype.id
            )
            select component, jsonb_merge_object(data) as data
                from prototypes
                group by component
        </query>
    </named-native-query>
    <sql-result-set-mapping name="GameObjectComponentPrototypeRepository.findPrototypesByPrototypeName">
        <constructor-result target-class="ru.finex.core.model.entity.GameObjectComponentPrototype">
            <column name="component" class="java.lang.String"/>
            <column name="data" class="java.lang.String"/>
        </constructor-result>
    </sql-result-set-mapping>
</entity-mappings>